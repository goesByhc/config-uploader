// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigMiniMap.proto

package com.inke.conf;

public final class ConfigMiniMapAll {
  private ConfigMiniMapAll() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConfigMiniMapListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ConfigMiniMapList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> 
        getListList();
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getList(int index);
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    int getListCount();
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    java.util.List<? extends com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder> 
        getListOrBuilderList();
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder getListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ConfigMiniMapList}
   */
  public static final class ConfigMiniMapList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ConfigMiniMapList)
      ConfigMiniMapListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfigMiniMapList.newBuilder() to construct.
    private ConfigMiniMapList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigMiniMapList() {
      list_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConfigMiniMapList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfigMiniMapList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                list_ = new java.util.ArrayList<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap>();
                mutable_bitField0_ |= 0x00000001;
              }
              list_.add(
                  input.readMessage(com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          list_ = java.util.Collections.unmodifiableList(list_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMapList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMapList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.class, com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.Builder.class);
    }

    public static final int LIST_FIELD_NUMBER = 1;
    private java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> list_;
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> getListList() {
      return list_;
    }
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder> 
        getListOrBuilderList() {
      return list_;
    }
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    @java.lang.Override
    public int getListCount() {
      return list_.size();
    }
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getList(int index) {
      return list_.get(index);
    }
    /**
     * <code>repeated .ConfigMiniMap list = 1;</code>
     */
    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder getListOrBuilder(
        int index) {
      return list_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < list_.size(); i++) {
        output.writeMessage(1, list_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < list_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, list_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList)) {
        return super.equals(obj);
      }
      com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList other = (com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList) obj;

      if (!getListList()
          .equals(other.getListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getListCount() > 0) {
        hash = (37 * hash) + LIST_FIELD_NUMBER;
        hash = (53 * hash) + getListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConfigMiniMapList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ConfigMiniMapList)
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMapListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMapList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMapList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.class, com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.Builder.class);
      }

      // Construct using com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (listBuilder_ == null) {
          list_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          listBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMapList_descriptor;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList getDefaultInstanceForType() {
        return com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.getDefaultInstance();
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList build() {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList buildPartial() {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList result = new com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList(this);
        int from_bitField0_ = bitField0_;
        if (listBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            list_ = java.util.Collections.unmodifiableList(list_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.list_ = list_;
        } else {
          result.list_ = listBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList) {
          return mergeFrom((com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList other) {
        if (other == com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList.getDefaultInstance()) return this;
        if (listBuilder_ == null) {
          if (!other.list_.isEmpty()) {
            if (list_.isEmpty()) {
              list_ = other.list_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureListIsMutable();
              list_.addAll(other.list_);
            }
            onChanged();
          }
        } else {
          if (!other.list_.isEmpty()) {
            if (listBuilder_.isEmpty()) {
              listBuilder_.dispose();
              listBuilder_ = null;
              list_ = other.list_;
              bitField0_ = (bitField0_ & ~0x00000001);
              listBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getListFieldBuilder() : null;
            } else {
              listBuilder_.addAllMessages(other.list_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> list_ =
        java.util.Collections.emptyList();
      private void ensureListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          list_ = new java.util.ArrayList<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap>(list_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.inke.conf.ConfigMiniMapAll.ConfigMiniMap, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder, com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder> listBuilder_;

      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> getListList() {
        if (listBuilder_ == null) {
          return java.util.Collections.unmodifiableList(list_);
        } else {
          return listBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public int getListCount() {
        if (listBuilder_ == null) {
          return list_.size();
        } else {
          return listBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getList(int index) {
        if (listBuilder_ == null) {
          return list_.get(index);
        } else {
          return listBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder setList(
          int index, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.set(index, value);
          onChanged();
        } else {
          listBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder setList(
          int index, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.set(index, builderForValue.build());
          onChanged();
        } else {
          listBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder addList(com.inke.conf.ConfigMiniMapAll.ConfigMiniMap value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.add(value);
          onChanged();
        } else {
          listBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder addList(
          int index, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.add(index, value);
          onChanged();
        } else {
          listBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder addList(
          com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.add(builderForValue.build());
          onChanged();
        } else {
          listBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder addList(
          int index, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.add(index, builderForValue.build());
          onChanged();
        } else {
          listBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder addAllList(
          java.lang.Iterable<? extends com.inke.conf.ConfigMiniMapAll.ConfigMiniMap> values) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, list_);
          onChanged();
        } else {
          listBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder clearList() {
        if (listBuilder_ == null) {
          list_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          listBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public Builder removeList(int index) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.remove(index);
          onChanged();
        } else {
          listBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder getListBuilder(
          int index) {
        return getListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder getListOrBuilder(
          int index) {
        if (listBuilder_ == null) {
          return list_.get(index);  } else {
          return listBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public java.util.List<? extends com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder> 
           getListOrBuilderList() {
        if (listBuilder_ != null) {
          return listBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(list_);
        }
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder addListBuilder() {
        return getListFieldBuilder().addBuilder(
            com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.getDefaultInstance());
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder addListBuilder(
          int index) {
        return getListFieldBuilder().addBuilder(
            index, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.getDefaultInstance());
      }
      /**
       * <code>repeated .ConfigMiniMap list = 1;</code>
       */
      public java.util.List<com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder> 
           getListBuilderList() {
        return getListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.inke.conf.ConfigMiniMapAll.ConfigMiniMap, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder, com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder> 
          getListFieldBuilder() {
        if (listBuilder_ == null) {
          listBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.inke.conf.ConfigMiniMapAll.ConfigMiniMap, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder, com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder>(
                  list_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          list_ = null;
        }
        return listBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ConfigMiniMapList)
    }

    // @@protoc_insertion_point(class_scope:ConfigMiniMapList)
    private static final com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList();
    }

    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigMiniMapList>
        PARSER = new com.google.protobuf.AbstractParser<ConfigMiniMapList>() {
      @java.lang.Override
      public ConfigMiniMapList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigMiniMapList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigMiniMapList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigMiniMapList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.ConfigMiniMapList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PosesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Poses)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 typeId = 2;</code>
     * @return The typeId.
     */
    int getTypeId();
  }
  /**
   * Protobuf type {@code Poses}
   */
  public static final class Poses extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Poses)
      PosesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Poses.newBuilder() to construct.
    private Poses(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Poses() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Poses();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Poses(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              typeId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_Poses_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_Poses_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.inke.conf.ConfigMiniMapAll.Poses.class, com.inke.conf.ConfigMiniMapAll.Poses.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPEID_FIELD_NUMBER = 2;
    private int typeId_;
    /**
     * <code>int32 typeId = 2;</code>
     * @return The typeId.
     */
    @java.lang.Override
    public int getTypeId() {
      return typeId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (typeId_ != 0) {
        output.writeInt32(2, typeId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (typeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, typeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.inke.conf.ConfigMiniMapAll.Poses)) {
        return super.equals(obj);
      }
      com.inke.conf.ConfigMiniMapAll.Poses other = (com.inke.conf.ConfigMiniMapAll.Poses) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getTypeId()
          != other.getTypeId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPEID_FIELD_NUMBER;
      hash = (53 * hash) + getTypeId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.Poses parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.inke.conf.ConfigMiniMapAll.Poses prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Poses}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Poses)
        com.inke.conf.ConfigMiniMapAll.PosesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_Poses_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_Poses_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.inke.conf.ConfigMiniMapAll.Poses.class, com.inke.conf.ConfigMiniMapAll.Poses.Builder.class);
      }

      // Construct using com.inke.conf.ConfigMiniMapAll.Poses.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        typeId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_Poses_descriptor;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.Poses getDefaultInstanceForType() {
        return com.inke.conf.ConfigMiniMapAll.Poses.getDefaultInstance();
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.Poses build() {
        com.inke.conf.ConfigMiniMapAll.Poses result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.Poses buildPartial() {
        com.inke.conf.ConfigMiniMapAll.Poses result = new com.inke.conf.ConfigMiniMapAll.Poses(this);
        result.name_ = name_;
        result.typeId_ = typeId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.inke.conf.ConfigMiniMapAll.Poses) {
          return mergeFrom((com.inke.conf.ConfigMiniMapAll.Poses)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.inke.conf.ConfigMiniMapAll.Poses other) {
        if (other == com.inke.conf.ConfigMiniMapAll.Poses.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getTypeId() != 0) {
          setTypeId(other.getTypeId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.inke.conf.ConfigMiniMapAll.Poses parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.inke.conf.ConfigMiniMapAll.Poses) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int typeId_ ;
      /**
       * <code>int32 typeId = 2;</code>
       * @return The typeId.
       */
      @java.lang.Override
      public int getTypeId() {
        return typeId_;
      }
      /**
       * <code>int32 typeId = 2;</code>
       * @param value The typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeId(int value) {
        
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 typeId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeId() {
        
        typeId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Poses)
    }

    // @@protoc_insertion_point(class_scope:Poses)
    private static final com.inke.conf.ConfigMiniMapAll.Poses DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.inke.conf.ConfigMiniMapAll.Poses();
    }

    public static com.inke.conf.ConfigMiniMapAll.Poses getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Poses>
        PARSER = new com.google.protobuf.AbstractParser<Poses>() {
      @java.lang.Override
      public Poses parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poses(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Poses> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Poses> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.Poses getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigMiniMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ConfigMiniMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>string resPath = 2;</code>
     * @return The resPath.
     */
    java.lang.String getResPath();
    /**
     * <code>string resPath = 2;</code>
     * @return The bytes for resPath.
     */
    com.google.protobuf.ByteString
        getResPathBytes();

    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    java.util.List<com.inke.conf.ConfigMiniMapAll.Poses> 
        getPosesList();
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    com.inke.conf.ConfigMiniMapAll.Poses getPoses(int index);
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    int getPosesCount();
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    java.util.List<? extends com.inke.conf.ConfigMiniMapAll.PosesOrBuilder> 
        getPosesOrBuilderList();
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    com.inke.conf.ConfigMiniMapAll.PosesOrBuilder getPosesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ConfigMiniMap}
   */
  public static final class ConfigMiniMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ConfigMiniMap)
      ConfigMiniMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfigMiniMap.newBuilder() to construct.
    private ConfigMiniMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigMiniMap() {
      resPath_ = "";
      poses_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConfigMiniMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfigMiniMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              resPath_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                poses_ = new java.util.ArrayList<com.inke.conf.ConfigMiniMapAll.Poses>();
                mutable_bitField0_ |= 0x00000001;
              }
              poses_.add(
                  input.readMessage(com.inke.conf.ConfigMiniMapAll.Poses.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          poses_ = java.util.Collections.unmodifiableList(poses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMap_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.class, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RESPATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object resPath_;
    /**
     * <code>string resPath = 2;</code>
     * @return The resPath.
     */
    @java.lang.Override
    public java.lang.String getResPath() {
      java.lang.Object ref = resPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resPath_ = s;
        return s;
      }
    }
    /**
     * <code>string resPath = 2;</code>
     * @return The bytes for resPath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResPathBytes() {
      java.lang.Object ref = resPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSES_FIELD_NUMBER = 3;
    private java.util.List<com.inke.conf.ConfigMiniMapAll.Poses> poses_;
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.inke.conf.ConfigMiniMapAll.Poses> getPosesList() {
      return poses_;
    }
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.inke.conf.ConfigMiniMapAll.PosesOrBuilder> 
        getPosesOrBuilderList() {
      return poses_;
    }
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    @java.lang.Override
    public int getPosesCount() {
      return poses_.size();
    }
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.Poses getPoses(int index) {
      return poses_.get(index);
    }
    /**
     * <code>repeated .Poses poses = 3;</code>
     */
    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.PosesOrBuilder getPosesOrBuilder(
        int index) {
      return poses_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getResPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, resPath_);
      }
      for (int i = 0; i < poses_.size(); i++) {
        output.writeMessage(3, poses_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getResPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, resPath_);
      }
      for (int i = 0; i < poses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, poses_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.inke.conf.ConfigMiniMapAll.ConfigMiniMap)) {
        return super.equals(obj);
      }
      com.inke.conf.ConfigMiniMapAll.ConfigMiniMap other = (com.inke.conf.ConfigMiniMapAll.ConfigMiniMap) obj;

      if (getId()
          != other.getId()) return false;
      if (!getResPath()
          .equals(other.getResPath())) return false;
      if (!getPosesList()
          .equals(other.getPosesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + RESPATH_FIELD_NUMBER;
      hash = (53 * hash) + getResPath().hashCode();
      if (getPosesCount() > 0) {
        hash = (37 * hash) + POSES_FIELD_NUMBER;
        hash = (53 * hash) + getPosesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.inke.conf.ConfigMiniMapAll.ConfigMiniMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConfigMiniMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ConfigMiniMap)
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMap_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.class, com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.Builder.class);
      }

      // Construct using com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPosesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        resPath_ = "";

        if (posesBuilder_ == null) {
          poses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          posesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.inke.conf.ConfigMiniMapAll.internal_static_ConfigMiniMap_descriptor;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getDefaultInstanceForType() {
        return com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.getDefaultInstance();
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap build() {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap buildPartial() {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMap result = new com.inke.conf.ConfigMiniMapAll.ConfigMiniMap(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.resPath_ = resPath_;
        if (posesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            poses_ = java.util.Collections.unmodifiableList(poses_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.poses_ = poses_;
        } else {
          result.poses_ = posesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.inke.conf.ConfigMiniMapAll.ConfigMiniMap) {
          return mergeFrom((com.inke.conf.ConfigMiniMapAll.ConfigMiniMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.inke.conf.ConfigMiniMapAll.ConfigMiniMap other) {
        if (other == com.inke.conf.ConfigMiniMapAll.ConfigMiniMap.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getResPath().isEmpty()) {
          resPath_ = other.resPath_;
          onChanged();
        }
        if (posesBuilder_ == null) {
          if (!other.poses_.isEmpty()) {
            if (poses_.isEmpty()) {
              poses_ = other.poses_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePosesIsMutable();
              poses_.addAll(other.poses_);
            }
            onChanged();
          }
        } else {
          if (!other.poses_.isEmpty()) {
            if (posesBuilder_.isEmpty()) {
              posesBuilder_.dispose();
              posesBuilder_ = null;
              poses_ = other.poses_;
              bitField0_ = (bitField0_ & ~0x00000001);
              posesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPosesFieldBuilder() : null;
            } else {
              posesBuilder_.addAllMessages(other.poses_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.inke.conf.ConfigMiniMapAll.ConfigMiniMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.inke.conf.ConfigMiniMapAll.ConfigMiniMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object resPath_ = "";
      /**
       * <code>string resPath = 2;</code>
       * @return The resPath.
       */
      public java.lang.String getResPath() {
        java.lang.Object ref = resPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          resPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string resPath = 2;</code>
       * @return The bytes for resPath.
       */
      public com.google.protobuf.ByteString
          getResPathBytes() {
        java.lang.Object ref = resPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string resPath = 2;</code>
       * @param value The resPath to set.
       * @return This builder for chaining.
       */
      public Builder setResPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string resPath = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearResPath() {
        
        resPath_ = getDefaultInstance().getResPath();
        onChanged();
        return this;
      }
      /**
       * <code>string resPath = 2;</code>
       * @param value The bytes for resPath to set.
       * @return This builder for chaining.
       */
      public Builder setResPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resPath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.inke.conf.ConfigMiniMapAll.Poses> poses_ =
        java.util.Collections.emptyList();
      private void ensurePosesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          poses_ = new java.util.ArrayList<com.inke.conf.ConfigMiniMapAll.Poses>(poses_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.inke.conf.ConfigMiniMapAll.Poses, com.inke.conf.ConfigMiniMapAll.Poses.Builder, com.inke.conf.ConfigMiniMapAll.PosesOrBuilder> posesBuilder_;

      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public java.util.List<com.inke.conf.ConfigMiniMapAll.Poses> getPosesList() {
        if (posesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(poses_);
        } else {
          return posesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public int getPosesCount() {
        if (posesBuilder_ == null) {
          return poses_.size();
        } else {
          return posesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.Poses getPoses(int index) {
        if (posesBuilder_ == null) {
          return poses_.get(index);
        } else {
          return posesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder setPoses(
          int index, com.inke.conf.ConfigMiniMapAll.Poses value) {
        if (posesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePosesIsMutable();
          poses_.set(index, value);
          onChanged();
        } else {
          posesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder setPoses(
          int index, com.inke.conf.ConfigMiniMapAll.Poses.Builder builderForValue) {
        if (posesBuilder_ == null) {
          ensurePosesIsMutable();
          poses_.set(index, builderForValue.build());
          onChanged();
        } else {
          posesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder addPoses(com.inke.conf.ConfigMiniMapAll.Poses value) {
        if (posesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePosesIsMutable();
          poses_.add(value);
          onChanged();
        } else {
          posesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder addPoses(
          int index, com.inke.conf.ConfigMiniMapAll.Poses value) {
        if (posesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePosesIsMutable();
          poses_.add(index, value);
          onChanged();
        } else {
          posesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder addPoses(
          com.inke.conf.ConfigMiniMapAll.Poses.Builder builderForValue) {
        if (posesBuilder_ == null) {
          ensurePosesIsMutable();
          poses_.add(builderForValue.build());
          onChanged();
        } else {
          posesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder addPoses(
          int index, com.inke.conf.ConfigMiniMapAll.Poses.Builder builderForValue) {
        if (posesBuilder_ == null) {
          ensurePosesIsMutable();
          poses_.add(index, builderForValue.build());
          onChanged();
        } else {
          posesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder addAllPoses(
          java.lang.Iterable<? extends com.inke.conf.ConfigMiniMapAll.Poses> values) {
        if (posesBuilder_ == null) {
          ensurePosesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, poses_);
          onChanged();
        } else {
          posesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder clearPoses() {
        if (posesBuilder_ == null) {
          poses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          posesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public Builder removePoses(int index) {
        if (posesBuilder_ == null) {
          ensurePosesIsMutable();
          poses_.remove(index);
          onChanged();
        } else {
          posesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.Poses.Builder getPosesBuilder(
          int index) {
        return getPosesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.PosesOrBuilder getPosesOrBuilder(
          int index) {
        if (posesBuilder_ == null) {
          return poses_.get(index);  } else {
          return posesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public java.util.List<? extends com.inke.conf.ConfigMiniMapAll.PosesOrBuilder> 
           getPosesOrBuilderList() {
        if (posesBuilder_ != null) {
          return posesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(poses_);
        }
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.Poses.Builder addPosesBuilder() {
        return getPosesFieldBuilder().addBuilder(
            com.inke.conf.ConfigMiniMapAll.Poses.getDefaultInstance());
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public com.inke.conf.ConfigMiniMapAll.Poses.Builder addPosesBuilder(
          int index) {
        return getPosesFieldBuilder().addBuilder(
            index, com.inke.conf.ConfigMiniMapAll.Poses.getDefaultInstance());
      }
      /**
       * <code>repeated .Poses poses = 3;</code>
       */
      public java.util.List<com.inke.conf.ConfigMiniMapAll.Poses.Builder> 
           getPosesBuilderList() {
        return getPosesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.inke.conf.ConfigMiniMapAll.Poses, com.inke.conf.ConfigMiniMapAll.Poses.Builder, com.inke.conf.ConfigMiniMapAll.PosesOrBuilder> 
          getPosesFieldBuilder() {
        if (posesBuilder_ == null) {
          posesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.inke.conf.ConfigMiniMapAll.Poses, com.inke.conf.ConfigMiniMapAll.Poses.Builder, com.inke.conf.ConfigMiniMapAll.PosesOrBuilder>(
                  poses_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          poses_ = null;
        }
        return posesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ConfigMiniMap)
    }

    // @@protoc_insertion_point(class_scope:ConfigMiniMap)
    private static final com.inke.conf.ConfigMiniMapAll.ConfigMiniMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.inke.conf.ConfigMiniMapAll.ConfigMiniMap();
    }

    public static com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigMiniMap>
        PARSER = new com.google.protobuf.AbstractParser<ConfigMiniMap>() {
      @java.lang.Override
      public ConfigMiniMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigMiniMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigMiniMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigMiniMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.inke.conf.ConfigMiniMapAll.ConfigMiniMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConfigMiniMapList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConfigMiniMapList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Poses_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Poses_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConfigMiniMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConfigMiniMap_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ConfigMiniMap.proto\"1\n\021ConfigMiniMapLi" +
      "st\022\034\n\004list\030\001 \003(\0132\016.ConfigMiniMap\"%\n\005Pose" +
      "s\022\014\n\004name\030\001 \001(\t\022\016\n\006typeId\030\002 \001(\005\"C\n\rConfi" +
      "gMiniMap\022\n\n\002id\030\001 \001(\005\022\017\n\007resPath\030\002 \001(\t\022\025\n" +
      "\005poses\030\003 \003(\0132\006.PosesB)\n\rcom.inke.confB\020C" +
      "onfigMiniMapAllZ\006.;gameb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ConfigMiniMapList_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ConfigMiniMapList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConfigMiniMapList_descriptor,
        new java.lang.String[] { "List", });
    internal_static_Poses_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Poses_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Poses_descriptor,
        new java.lang.String[] { "Name", "TypeId", });
    internal_static_ConfigMiniMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ConfigMiniMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConfigMiniMap_descriptor,
        new java.lang.String[] { "Id", "ResPath", "Poses", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
